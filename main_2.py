import logging
from aiogram import filters
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.contrib.middlewares.logging import LoggingMiddleware
import asyncio
import time
import aiohttp
import config
from utils import TestStates
import pickle
import os
import io
from PIL import Image
import module1
import returnimg
import deep
import subprocess

logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=config.TOKEN)
#dp = Dispatcher(bot)
dp = Dispatcher(bot, storage=MemoryStorage())
dp.middleware.setup(LoggingMiddleware())


#–û–ë—Ä–∞–±–∞—Ç–≤–∞–µ–º –∫–æ–º–º–∞–Ω–¥—É /start
@dp.message_handler(state="*", commands=['start'])
async def welcome(message: types.Message):
    #–°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    state = dp.current_state(chat=message.chat.id, user=message.from_user.id)
    await state.reset_state()

    #–î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    inline = InlineKeyboardMarkup(row_width=1).add(config.photo, config.balance, config.subs, config.free)

    await bot.send_message(message.from_user.id, '‚úã<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</b>, {0.first_name}!\n–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å —Ä–∞–∑–¥–µ—Ç—å –ª—é–±—É—é –¥–µ–≤—É—à–∫—Éüòà\n\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ:\n\n<b>–ö–æ–∏–Ω—ã:</b> ... \n<b>–ü–æ–¥–ø–∏—Å–∫–∞:</b> ... \n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\nüó£ <b>–ö–∞–∂–¥–æ–º—É –Ω–æ–≤–æ–º—É –∫–ª—Ç–µ–Ω—Ç—É –º—ã –¥–∞—Ä–∏–º 2 –∫–æ–∏–Ω–∞.</b>\n\nüõ† –ù–∞—à–∞ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞: @godofpussies \nüèµ –ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª: ... \n\n<i><b>–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–†–∞–∑–¥–µ—Ç—å" –∏ –ø–æ–ª—É—á–∞–π —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ</b></i>'.format(message.from_user, bot.get_me()),parse_mode ='html', reply_markup = inline)
    module1.Sql.start(message.from_user.first_name,message.chat.id,'false','2','false')



@dp.message_handler(content_types=["photo"])
async def audio_handler(message: types.Message):

    #–°–æ—Ö—Ä–∞–Ω–µ–º –§–æ—Ç–∫—É
    chatid = message.chat.id
    str_id = str(chatid)
    await message.photo[-1].download(str_id+ ".jpg")

    #–û–±—Ä–∞–±–æ—Ç–∞–µ–º —Ñ–æ—Ç–æ
    returnimg.result(str_id + ".jpg", str_id + "inp.png")
    os.remove(str_id + ".jpg")

    #–ø–∏—Ö–∞–µ–º –≤ –Ω–µ–π—Ä–æ–Ω–∫—É
    # –¢—É—Ç –Ω—É–∂–Ω–æ sql, –µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∞ –∏–ª–∏ –∫–æ–∏–Ω—ã —Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —ç—Ç–æ—Ç –∫–æ–¥
    cmd = 'python deep.py --input="%s" --output="%s"' %(str_id + "inp.png", str_id + "result.png")
    subprocess.Popen(cmd, shell = True)
    await asyncio.sleep(3)
    os.remove(str_id + "inp.png")

    i = 0
    while i < 30:
        if config.check_photo(str_id + "result.png") == False:
            await asyncio.sleep(10)
            i += 0.5
        elif config.check_photo(str_id + "result.png") == True:
            photo = open(str(str_id + "result.png"), 'rb')
            await bot.send_photo(message.from_user.id, photo)
            await bot.send_message(message.from_user.id,("‚ùï<b><i>–î–ª—è –≤—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ /start</i></b>"),parse_mode ='html')
            i = 60
            os.remove(str_id + "result.png")

    #–ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∏ –∏–ª –∫–æ–∏–Ω–æ–≤ —Ç–æ —ç—Ç–æ—Ç
    """await bot.send_message(message.from_user.id,("‚ùï<b><i>–£ –≤–∞—Å –Ω–µ—Ç –∫–æ–∏–Ω–æ–≤ –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ—ç—Ç–æ–º—É –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ —Ä–µ–∂–∏–º–µ –æ—á–µ—Ä–µ–¥–∏.</i></b>"),parse_mode ='html')
    await asyncio.sleep(1200)
    cmd = 'python deep.py --input="%s" --output="%s"' %(str_id + "inp.png", str_id + "result.png")
    subprocess.Popen(cmd, shell = True)
    await asyncio.sleep(3)
    os.remove(str_id + "inp.png")

    i = 0
    while i < 30:
        if config.check_photo(str_id + "result.png") == False:
            await asyncio.sleep(10)
            i += 0.5
        elif config.check_photo(str_id + "result.png") == True:
            photo = open(str(str_id + "result.png"), 'rb')
            await bot.send_photo(message.from_user.id, photo)
            i = 60
            os.remove(str_id + "result.png")"""

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–∏—Å–ª–∞ –∫–æ–∏–Ω–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –≤–≤–æ–¥—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏

#---------------------------------–¢—É—Ç –ø–∏–∑–¥–∞ –Ω—ç —Å–º–æ—Ç—Ä–µ—Ç—å-----------------------------------#
@dp.message_handler(state=TestStates.TEST_STATE_1)
async def msg_handler(message: types.Message):
    try:
        #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
        sum = int(message.text)
        string = str("id/") + str(int(message.from_user["id"])) + str(".txt")
        mass = [sum]
        if (sum < 30):
            ran = float(sum*5) + config.randls() - 1
            mass.append(ran)
            with open(string , 'wb') as f:
                    pickle.dump(mass, f)

            inline = InlineKeyboardMarkup(row_width=1).add(config.sber,config.back)
            await bot.send_message(message.from_user.id,("ü§ñ–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å <b>%i</b> –∫–æ–∏–Ω–æ–≤. \nüìà–°—Ç–æ–∏–º–æ—Å—Ç—å:  <b>%.2f</b> —Ä—É–±–ª–µ–π \n\nüîΩ<i>–í—ã–±–µ—Ä–µ—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</i>" %(sum, ran)),parse_mode ='html', reply_markup = inline)

            #–£–¥–∞–ª–∏–º —Ñ–∞–π–ª
            await asyncio.sleep(1800)
            os.remove(string)

        elif (sum > 29) and (sum < 70):
            ran = float(sum*3.3) + config.randls() - 1
            mass.append(ran)
            with open(string , 'wb') as f:
                    pickle.dump(mass, f)

            inline = InlineKeyboardMarkup(row_width=1).add(config.sber,config.back)
            await bot.send_message(message.from_user.id,("ü§ñ–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å <b>%i</b> –∫–æ–∏–Ω–æ–≤. \nüìà–°—Ç–æ–∏–º–æ—Å—Ç—å:  <b>%.2f</b> —Ä—É–±–ª–µ–π \n\nüîΩ<i>–í—ã–±–µ—Ä–µ—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</i>" %(sum, ran)),parse_mode ='html', reply_markup = inline)
            #–£–¥–∞–ª–∏–º —Ñ–∞–π–ª
            await asyncio.sleep(1800)
            os.remove(string)

        elif (sum > 69) and (sum < 120):
            ran = float(sum*2.8) + config.randls() - 1
            mass.append(ran)
            with open(string , 'wb') as f:
                    pickle.dump(mass, f)

            inline = InlineKeyboardMarkup(row_width=1).add(config.sber,config.back)
            await bot.send_message(message.from_user.id,("ü§ñ–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å <b>%i</b> –∫–æ–∏–Ω–æ–≤. \nüìà–°—Ç–æ–∏–º–æ—Å—Ç—å:  <b>%.2f</b> —Ä—É–±–ª–µ–π \n\nüîΩ<i>–í—ã–±–µ—Ä–µ—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</i>" %(sum, ran)),parse_mode ='html', reply_markup = inline)
            #–£–¥–∞–ª–∏–º —Ñ–∞–π–ª
            await asyncio.sleep(1800)
            os.remove(string)

        elif (sum > 119) and (sum < 170):
            ran = float(sum*2.5) + config.randls() - 1
            mass.append(ran)
            with open(string , 'wb') as f:
                    pickle.dump(mass, f)

            inline = InlineKeyboardMarkup(row_width=1).add(config.sber,config.back)
            await bot.send_message(message.from_user.id,("ü§ñ–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å <b>%i</b> –∫–æ–∏–Ω–æ–≤. \nüìà–°—Ç–æ–∏–º–æ—Å—Ç—å:  <b>%.2f</b> —Ä—É–±–ª–µ–π \n\nüîΩ<i>–í—ã–±–µ—Ä–µ—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</i>" %(sum, ran)),parse_mode ='html', reply_markup = inline)
            #–£–¥–∞–ª–∏–º —Ñ–∞–π–ª
            await asyncio.sleep(1800)
            os.remove(string)

        elif (sum > 169) and (sum < 230):
            ran = float(sum*2.3) + config.randls() - 1
            mass.append(ran)
            with open(string , 'wb') as f:
                    pickle.dump(mass, f)

            inline = InlineKeyboardMarkup(row_width=1).add(config.sber,config.back)
            await bot.send_message(message.from_user.id,("ü§ñ–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å <b>%i</b> –∫–æ–∏–Ω–æ–≤. \nüìà–°—Ç–æ–∏–º–æ—Å—Ç—å:  <b>%.2f</b> —Ä—É–±–ª–µ–π \n\nüîΩ<i>–í—ã–±–µ—Ä–µ—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</i>" %(sum, ran)),parse_mode ='html', reply_markup = inline)
            #–£–¥–∞–ª–∏–º —Ñ–∞–π–ª
            await asyncio.sleep(1800)
            os.remove(string)

        elif (sum > 229) and (sum < 251):
            ran = float(sum*2.1) + config.randls() - 1
            mass.append(ran)
            with open(string , 'wb') as f:
                    pickle.dump(mass, f)

            inline = InlineKeyboardMarkup(row_width=1).add(config.sber,config.back)
            await bot.send_message(message.from_user.id,("ü§ñ–í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å <b>%i</b> –∫–æ–∏–Ω–æ–≤. \nüìà–°—Ç–æ–∏–º–æ—Å—Ç—å:  <b>%.2f</b> —Ä—É–±–ª–µ–π \n\nüîΩ<i>–í—ã–±–µ—Ä–µ—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</i>" %(sum, ran)),parse_mode ='html', reply_markup = inline)
            #–£–¥–∞–ª–∏–º —Ñ–∞–π–ª
            await asyncio.sleep(1800)
            os.remove(string)

        else:
            await bot.send_message(message.from_user.id,"‚ùóÔ∏è<b>–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞–µ—á–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑</b>",parse_mode ='html')
    except Exception:
        await bot.send_message(message.from_user.id,"‚ùóÔ∏è<b>–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞–µ—á–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑</b>",parse_mode ='html')
#-------------------------------------------------------------------------------------------------------#


#–¢—É—Ç –Ω–µ–π—Ä–æ–Ω–∫–∞
@dp.callback_query_handler(text = 'photo')
async def process_callback_button1(callback_query: types.CallbackQuery):

    #—É–¥–∞–ª—è–µ–º –ø–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)

    await bot.send_message(callback_query.from_user.id, 'üìã –£—Å–ª–æ–≤–∏—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: \n\n1Ô∏è‚É£<b>–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –¥–µ–≤—É—à–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –∫—É–ø–∞–ª—å–Ω–∏–∫–µ –∏–ª–∏ –Ω–∏–∂–Ω–µ–º –±–µ–ª—å–µ!</b> \n2Ô∏è‚É£<b>–î–µ–≤—É—à–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ —Ü–µ–Ω—Ç—Ä—É —Ñ–æ—Ç–æ , –ª–∏—Ü–æ–º –∏ –≥—Ä—É–¥—å—é –∫ –æ–±—ä–µ–∫—Ç–∏–≤—É!</b> \n\n <i>–î–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ</i> /start\n\n‚ùï<b>–ê —Ç–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ –∏ –ø–æ–ª—É—á–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.</b>',parse_mode ='html')

#–ë–∞–ª–∞–Ω—Å
@dp.callback_query_handler(text = 'balance')
async def process_callback_button1(callback_query: types.CallbackQuery):

    #—É–¥–∞–ª—è–µ–º –ø–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)
    # –ü–æ –∏–¥–µ–∏–∏ –¥–æ–ª–∂–Ω–æ —Ç–∞–∫ –≤—ã–≥–ª—è–¥–µ—Ç—å –∏ —Ä–∞–±–æ—Ç–∞—Ç—å:
    info = module1.Sql.select(callback_query.message.message_id)
    coin = "456"#info[1]
    sub = "..."#info[0]
    #–î–æ–±–∞–≤–∏–º –∫–Ω–æ–ø–∫–∏
    inline = InlineKeyboardMarkup(row_width=1).add(config.repl, config.back)
    await bot.send_message(callback_query.from_user.id, ('<i>–§–æ—Ç–æ–≥—Ä–∞–∏–∏ –∑–∞ –∫–æ–∏–Ω—ã –æ–±—Ä–∞–±—Ç—ã–≤–∞—é—Ç—Å—è –≤–Ω–µ –æ—á–µ—Ä–µ–¥–∏ –∏ –±–µ–∑ –≤–≤–æ–¥–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤</i>\n\nüé≤–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ: \n\n<b>-–ö–æ–∏–Ω–æ–≤:</b> %0.f \n<b>-–ü–æ–¥–ø–∏—Å–∫–∞:</b>  %s\n\n„ÄΩÔ∏è–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–∏–Ω–æ–≤:\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n<b>1 –∫–æ–∏–Ω</b> - 5 —Ä—É–±–ª–µ–π\n<b>30 –∫–æ–∏–Ω–æ–≤</b> - 100 —Ä—É–±–ª–µ–π\n<b>70 –∫–æ–∏–Ω–æ–≤</b> - 200 —Ä—É–±–ª–µ–π\n<b>120 –∫–æ–∏–Ω–æ–≤</b> - 300 —Ä—É–±–ª–µ–π\n<b>170 –∫–æ–∏–Ω–æ–≤</b> - 400 —Ä—É–±–ª–µ–π\n<b>230 –∫–æ–∏–Ω–æ–≤</b> - 500 —Ä—É–±–ª–µ–π\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\nüó£<b><i>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ö—É–ø–∏—Ç—å –∫–æ–∏–Ω—ã" –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</i></b>' %(coin , sub)),parse_mode ='html', reply_markup = inline)

#–ö–Ω–æ–ø–∫–∞ "–ö—É–ø–∏—Ç—å –∫–æ–∏–Ω—ã"
@dp.callback_query_handler(text = 'add')
async def process_callback_button1(callback_query: types.CallbackQuery):

    #—É–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    await bot.edit_message_reply_markup(chat_id= callback_query.message.chat.id ,message_id= callback_query.message.message_id ,inline_message_id = None ,reply_markup = None )

    #–ú–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    state = dp.current_state(chat=callback_query.message.chat.id, user=callback_query.from_user.id)
    await state.set_state(TestStates.all()[1])

    await bot.send_message(callback_query.from_user.id, 'üì≤<b>–í–≤–µ–¥–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –∫–æ–∏–Ω–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å</b>\n<i>–î–ª—è –æ—Ç–º–µ–Ω—ã /start</i>',parse_mode ='html')


#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–±–µ—Ä–±–∞–Ω–∫
@dp.callback_query_handler(state=TestStates.TEST_STATE_1, text = 'sber')
async def process_callback_button1(callback_query: types.CallbackQuery):

    #—É–¥–∞–ª—è–µ–º –ø–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)

    #–°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    state = dp.current_state(chat=callback_query.message.chat.id, user=callback_query.from_user.id)
    await state.reset_state()

    #–í—ã—Ç—Ç–∞—â–∏–º —Å—É–º–º—É
    sum = config.string(callback_query.from_user)

    inline = InlineKeyboardMarkup(row_width=1).add(config.agree_coins, config.back)
    await bot.send_message(callback_query.from_user.id, ('üí†–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>–°–±–µ—Ä–±–∞–Ω–∫</b> \nüí≥–ö–∞—Ä—Ç–∞: <b>0000 0000 0000 0000</b>\n\n<i>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>"–°–æ–≥–ª–∞—Å–µ–Ω"</b> –∏ –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç—É <b>%.2f —Ä—É–±–ª–µ–π</b> –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç. –ü–æ—Å–ª–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–≤–µ–¥–æ–º–∏—Ç –≤–∞—Å.</i> \n\n<code>–ï—Å–ª–∏ –±–æ—Ç –Ω–µ —É–≤–∏–¥–µ–ª –ø–ª–∞—Ç–µ–∂ –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –ø—Ä–æ—Å—å–±–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</code> - <b>@godofpussies</b>\n\n‚¨áÔ∏è<b>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–æ–≥–ª–∞—Å–µ–Ω"</b>‚¨áÔ∏è' %sum) ,parse_mode ='html', reply_markup = inline)
    #await bot.send_message(callback_query.from_user.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>–°–±–µ—Ä–±–∞–Ω–∫</b> \n–ö–∞—Ä—Ç–∞: <b>0000 0000 0000 0000</b>\n\n<i>–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç—É %2f —Ä—É–±–ª–µ–π –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>"–û–ø–ª–∞—Ç–∏–ª"</b>. –†–µ–∫—É–º–µ–Ω–¥—É–µ–º –ø–æ–¥–æ–∂–¥–∞—Ç—å 5 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞</i>',parse_mode ='html')


#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–≥–ª–∞—Å–µ–Ω —É —Å–±–µ—Ä–±–∞–Ω–∫–∞ –¥–ª—è –∫–æ–∏–Ω–æ–≤
@dp.callback_query_handler(text = 'agree_coins')
async def process_callback_button1(callback_query: types.CallbackQuery):

    #—É–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    await bot.edit_message_reply_markup(chat_id= callback_query.message.chat.id ,message_id= callback_query.message.message_id ,inline_message_id = None ,reply_markup = None )

    await bot.send_message(callback_query.from_user.id, ('<i>–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ /start</i>') ,parse_mode ='html')
    #–í—ã—Ç—Ç–∞—â–∏–º —Å—É–º–º—É
    sum = float(config.string(callback_query.from_user))
    value = int(config.coins(callback_query.from_user))

    i = 0
    while i < 30:
        if config.chek_sber(sum) == True:
            #–¢—É—Ç –Ω–∞–¥–æ –∑–∞–Ω–µ—Å—Ç–∏ –≤ –±–¥ –∫–æ–ª-–≤–æ –∫–æ–∏–Ω–æ–≤, —Ç–æ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é value
            inline = InlineKeyboardMarkup(row_width=1).add(config.menu)
            await bot.send_message(callback_query.from_user.id, ('üôå<b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</b>\n<b>–í–∞—à –±–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω.</b>') ,parse_mode ='html', reply_markup = inline)
            #module1.Sql.update(callback_query.chat.id,value,'false','false')
            i = 60
        else:
            await asyncio.sleep(60)
            i+=1
    if i == 30:
        inline = InlineKeyboardMarkup(row_width=1).add(config.menu)
        await bot.send_message(callback_query.from_user.id, ('üìç<b>–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞</b>\n<i>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É - @godofpussies</i>') ,parse_mode ='html', reply_markup = inline)


#–ü–æ–¥–ø–∏—Å–∫–∏
@dp.callback_query_handler(text = 'subs')
async def process_callback_button1(callback_query: types.CallbackQuery):

    #—É–¥–∞–ª—è–µ–º –ø–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)

    #–î–æ–±–∞–≤–∏–º –∫–Ω–æ–ø–∫–∏
    inline = InlineKeyboardMarkup(row_width=1).add(config.ad_subs, config.back)
    await bot.send_message(callback_query.from_user.id, 'üóÇ<i>–ü–æ–¥–ø–∏—Å–∫–∞ –∏–º–µ–µ—Ç —Å–≤–æ–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</i>\n\n‚ñ´Ô∏è –ë–µ–∑ –æ—á–µ—Ä–µ–¥–∏.\n‚ñ´Ô∏è –ë–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞.\n‚ñ´Ô∏è –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∏ –ª–∏–º–∏—Ç–æ–≤.\n\n„ÄΩÔ∏è<b>–°—Ç–æ–∏–º–æ—Ç—å –ø–æ–¥–ø–∏—Å–æ–∫:</b>\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n<b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é</b> - 110 —Ä—É–±–ª–µ–π\n<b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü</b> - 320 —Ä—É–±–ª–µ–π\n<b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 2 –º–µ—Å—è—Ü–∞</b> - 499 —Ä—É–±–ª–µ–π\n<b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤</b> - 1199 —Ä—É–±–ª–µ–π\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\nüó£<b>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É" –¥–ª—è –ø–æ–∫—É–ø–∫–∏.</b>',parse_mode ='html', reply_markup = inline)


#–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–Ω–µ—Ç—ã
@dp.callback_query_handler(text = 'free')
async def process_callback_button1(callback_query: types.CallbackQuery):

    #—É–¥–∞–ª—è–µ–º –ø–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)

    #–î–æ–±–∞–≤–∏–º –∫–Ω–æ–ø–∫–∏
    inline = InlineKeyboardMarkup(row_width=1).add(config.back)
    await bot.send_message(callback_query.from_user.id, 'üìã –£—Å–ª–æ–≤–∏—è',parse_mode ='html', reply_markup = inline)


#–ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
@dp.callback_query_handler(text = 'back')
async def process_callback_button1(callback_query: types.CallbackQuery):

    #—É–¥–∞–ª—è–µ–º –ø–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)

    #–î–æ–±–∞–≤–∏–º –∫–Ω–æ–ø–∫–∏
    inline = InlineKeyboardMarkup(row_width=1).add(config.photo, config.balance, config.subs, config.free)
    await bot.send_message(callback_query.from_user.id, '‚úã<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</b>, {0.first_name}!\n–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å —Ä–∞–∑–¥–µ—Ç—å –ª—é–±—É—é –¥–µ–≤—É—à–∫—Éüòà\n\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ:\n\n<b>–ö–æ–∏–Ω—ã:</b> ... \n<b>–ü–æ–¥–ø–∏—Å–∫–∞:</b> ... \n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\nüó£ <b>–ö–∞–∂–¥–æ–º—É –Ω–æ–≤–æ–º—É –∫–ª—Ç–µ–Ω—Ç—É –º—ã –¥–∞—Ä–∏–º 2 –∫–æ–∏–Ω–∞.</b>\n\nüõ† –ù–∞—à–∞ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞: ... \nüèµ –ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª: ... \n\n<i><b>–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–†–∞–∑–¥–µ—Ç—å" –∏ –ø–æ–ª—É—á–∞–π —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ</b></i>'.format(callback_query.message.from_user, bot.get_me()),parse_mode ='html', reply_markup = inline)


#–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
@dp.callback_query_handler(text = 'add_s')
async def process_callback_button1(callback_query: types.CallbackQuery):

    #—É–¥–∞–ª—è–µ–º –ø–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)

    #–î–æ–±–∞–≤–∏–º –∫–Ω–æ–ø–∫–∏
    inline = InlineKeyboardMarkup(row_width=1).add(config.sub_1, config.sub_2, config.sub_3, config.sub_4, config.back)
    await bot.send_message(callback_query.from_user.id, '„ÄΩÔ∏è<b>–°—Ç–æ–∏–º–æ—Ç—å –ø–æ–¥–ø–∏—Å–æ–∫:</b>\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n<b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é</b> - 110 —Ä—É–±–ª–µ–π\n<b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü</b> - 320 —Ä—É–±–ª–µ–π\n<b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 2 –º–µ—Å—è—Ü–∞</b> - 499 —Ä—É–±–ª–µ–π\n<b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤</b> - 1199 —Ä—É–±–ª–µ–π\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\n‚¨áÔ∏è<b>–í—ã–±–µ—Ä–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å</b>‚¨áÔ∏è',parse_mode ='html', reply_markup = inline)


#–ü–µ—Ä–≤–∞—è –≤—Ç–æ—Ä–∞—è —Ç—Ä–µ—Ç—å—è –∏ —á–µ—Ç–≤–µ—Ä—Ç–∞—è –ø–æ–¥–ø–∏—Å–∫–∏
@dp.callback_query_handler(text = 'sub1')
@dp.callback_query_handler(text = 'sub2')
@dp.callback_query_handler(text = 'sub3')
@dp.callback_query_handler(text = 'sub4')
async def process_callback_button1(callback_query: types.CallbackQuery):
    data = callback_query.data
    string = str("id/") +str("sub")+ str(int(callback_query.from_user["id"])) + str(".txt")
    #—É–¥–∞–ª—è–µ–º –ø–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)

    a = config.this_sub_a(data, string)
    subb = config.this_sub_subb(data, string)

    #–î–æ–±–∞–≤–∏–º –∫–Ω–æ–ø–∫–∏
    inline = InlineKeyboardMarkup(row_width=1).add(config.sber_s,config.back)
    if (data == "sub1") or (data == "sub2") or (data == "sub3") or (data == "sub4"):
        await bot.send_message(callback_query.from_user.id, ('üí†–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>–ø–æ–¥–ø–∏—Å–∫—É %s</b>\nüîã–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ—Å—Ç–∞–≤–∏—Ç: <b>%.2f —Ä—É–±–ª–µ–π</b>\n\nüîΩ<i>–í—ã–±–µ—Ä–µ—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</i>üîΩ' %(subb, a)),parse_mode ='html', reply_markup = inline)

    await asyncio.sleep(1800)
    os.remove(string)


#–°–±–µ—Ä–±–∞–Ω–∫ —É –ø–æ–¥–ø–∏—Å–æ–∫
@dp.callback_query_handler(text = 'sber_s')
async def process_callback_button1(callback_query: types.CallbackQuery):
    string = str("id/") +str("sub")+ str(int(callback_query.from_user["id"])) + str(".txt")

    #—É–¥–∞–ª—è–µ–º –ø–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)

    #–î–æ—Å—Ç–∞–µ–º —Å—É–º–º—É
    sum = config.subs_sum(string)

    inline = InlineKeyboardMarkup(row_width=1).add(config.agree_subs, config.back)
    await bot.send_message(callback_query.from_user.id, ('üí†–í—ã –≤—ã–±—Ä–∞–ª–∏ <b>–°–±–µ—Ä–±–∞–Ω–∫</b> \nüí≥–ö–∞—Ä—Ç–∞: <b>5469 6800 2884 9943</b>\n\n<i>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>"–°–æ–≥–ª–∞—Å–µ–Ω"</b> –∏ –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç—É <b>%.2f —Ä—É–±–ª–µ–π</b> –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç. –ü–æ—Å–ª–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–≤–µ–¥–æ–º–∏—Ç –≤–∞—Å.</i> \n\n<code>–ï—Å–ª–∏ –±–æ—Ç –Ω–µ —É–≤–∏–¥–µ–ª –ø–ª–∞—Ç–µ–∂ –∏–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –ø—Ä–æ—Å—å–±–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</code> - <b>@godofpussies</b>\n\n‚¨áÔ∏è<b>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–æ–≥–ª–∞—Å–µ–Ω"</b>‚¨áÔ∏è' %sum) ,parse_mode ='html', reply_markup = inline)


#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–≥–ª–∞—Å–µ–Ω —É —Å–±–µ—Ä–±–∞–Ω–∫–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫
@dp.callback_query_handler(text = 'agree_subs')
async def process_callback_button1(callback_query: types.CallbackQuery):
    string = str("id/") +str("sub")+ str(int(callback_query.from_user["id"])) + str(".txt")

    #—É–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    await bot.edit_message_reply_markup(chat_id= callback_query.message.chat.id ,message_id= callback_query.message.message_id ,inline_message_id = None ,reply_markup = None )

    await bot.send_message(callback_query.from_user.id, ('<i>–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ /start</i>') ,parse_mode ='html')
    #–í—ã—Ç—Ç–∞—â–∏–º —Å—É–º–º—É
    sum = config.subs_sum(string)
    type = int(config.subs_type(string))

    i = 0
    while i < 1:
        if config.chek_sber(sum) == True:
            #–¢—É—Ç –Ω–∞–¥–æ –∑–∞–Ω–µ—Å—Ç–∏ –≤ –±–¥ –ø–æ–ª–ø–∏—Å–∫—É, —Ç–æ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é type(–µ—Å–ª–∏ type = 1, —Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é, 2 - –Ω–∞ –º–µ—Å—è—Ü, 3 - –Ω–∞ 2 –º–µ—Å—è—Ü–∞, 4 - –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤)
            inline = InlineKeyboardMarkup(row_width=1).add(config.menu)
            await bot.send_message(callback_query.from_user.id, ('üôå<b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</b>\n<b>–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω–∞.</b>') ,parse_mode ='html', reply_markup = inline)
            i = 60
        else:
            await asyncio.sleep(60)
            i+=1
    if i == 1:
        inline = InlineKeyboardMarkup(row_width=1).add(config.menu)
        await bot.send_message(callback_query.from_user.id, ('üìç<b>–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞</b>\n<i>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É - @godofpussies</i>') ,parse_mode ='html', reply_markup = inline)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
